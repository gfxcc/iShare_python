# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: iShare.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='iShare.proto',
  package='helloworld',
  syntax='proto3',
  serialized_pb=_b('\n\x0ciShare.proto\x12\nhelloworld\"-\n\x07Login_m\x12\x10\n\x08username\x18\x01 \x01(\t\x12\x10\n\x08password\x18\x02 \x01(\t\";\n\x06Sign_m\x12\x10\n\x08username\x18\x01 \x01(\t\x12\x10\n\x08password\x18\x02 \x01(\t\x12\r\n\x05\x65mail\x18\x03 \x01(\t\"\x1a\n\x03Inf\x12\x13\n\x0binformation\x18\x01 \x01(\t\"\"\n\x0fRepeated_string\x12\x0f\n\x07\x63ontent\x18\x01 \x03(\t\"E\n\rSearch_result\x12\x10\n\x08username\x18\x01 \x03(\t\x12\x0f\n\x07user_id\x18\x02 \x03(\t\x12\x11\n\tuser_icon\x18\x03 \x03(\x0c\"\x87\x01\n\x0bUser_detail\x12\x10\n\x08username\x18\x01 \x01(\t\x12\x0f\n\x07user_id\x18\x02 \x01(\t\x12\r\n\x05\x65mail\x18\x03 \x01(\t\x12\x14\n\x0c\x66riends_name\x18\x04 \x03(\t\x12\x12\n\nfriends_id\x18\x05 \x03(\t\x12\x1c\n\x14\x66riends_lastModified\x18\x06 \x03(\t\"\xd4\x01\n\tShare_inf\x12\x0f\n\x07\x63reater\x18\x01 \x01(\t\x12\x0e\n\x06\x61mount\x18\x02 \x01(\t\x12\x0c\n\x04type\x18\x03 \x01(\t\x12\x0e\n\x06paidBy\x18\x04 \x01(\t\x12\x0c\n\x04\x64\x61ta\x18\x05 \x01(\t\x12\x0c\n\x04note\x18\x06 \x01(\t\x12\r\n\x05image\x18\x07 \x01(\t\x12\x0f\n\x07members\x18\x08 \x03(\t\x12\x15\n\rmembers_count\x18\t \x01(\x05\x12\x0f\n\x07\x62ill_id\x18\n \x01(\t\x12\x12\n\npaidStatus\x18\x0b \x01(\t\x12\x10\n\x08typeIcon\x18\x0c \x01(\t\"?\n\x0c\x42ill_request\x12\x10\n\x08username\x18\x01 \x01(\t\x12\r\n\x05start\x18\x02 \x01(\t\x12\x0e\n\x06\x61mount\x18\x03 \x01(\t\"I\n\x08Syn_data\x12\x0e\n\x06\x66riend\x18\x01 \x01(\t\x12\x0c\n\x04\x62ill\x18\x02 \x01(\t\x12\x0e\n\x06\x64\x65lete\x18\x03 \x01(\t\x12\x0f\n\x07request\x18\x04 \x01(\t\"\x1c\n\x0cHelloRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\"\x1d\n\nHelloReply\x12\x0f\n\x07message\x18\x01 \x01(\t\"#\n\x05Image\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\x0c\"\xc5\x01\n\x07Request\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x0e\n\x06sender\x18\x02 \x01(\t\x12\x10\n\x08receiver\x18\x03 \x01(\t\x12\x0c\n\x04type\x18\x04 \x01(\t\x12\x0f\n\x07\x63ontent\x18\x05 \x01(\t\x12\x10\n\x08response\x18\x06 \x01(\t\x12\x14\n\x0crequest_date\x18\x07 \x01(\t\x12\x15\n\rresponse_date\x18\x08 \x01(\t\x12\x13\n\x0bignore_from\x18\t \x01(\t\x12\x11\n\tignore_to\x18\n \x01(\t\"i\n\x08Response\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x0e\n\x06sender\x18\x02 \x01(\t\x12\x10\n\x08receiver\x18\x03 \x01(\t\x12\x10\n\x08response\x18\x04 \x01(\t\x12\x15\n\rresponse_date\x18\x05 \x01(\t\"4\n\rIgnoreMessage\x12\x15\n\rrequestLog_id\x18\x01 \x01(\t\x12\x0c\n\x04user\x18\x02 \x01(\t\"2\n\x0b\x42illPayment\x12\x0f\n\x07\x62ill_id\x18\x01 \x01(\t\x12\x12\n\npaidStatus\x18\x02 \x01(\t\"\x84\x01\n\x07Setting\x12\x14\n\x0c\x66riendInvite\x18\x01 \x01(\x05\x12\x0f\n\x07newBill\x18\x02 \x01(\x05\x12\x18\n\x10\x65\x64itedDeleteBill\x18\x03 \x01(\x05\x12\x13\n\x0b\x63ommentBill\x18\x04 \x01(\x05\x12\x12\n\npaidNotice\x18\x05 \x01(\x05\x12\x0f\n\x07user_id\x18\x06 \x01(\t\"`\n\x08UserInfo\x12\x0f\n\x07user_id\x18\x01 \x01(\t\x12\x10\n\x08username\x18\x02 \x01(\t\x12\x10\n\x08password\x18\x03 \x01(\t\x12\r\n\x05\x65mail\x18\x04 \x01(\t\x12\x10\n\x08\x63urrency\x18\x05 \x01(\x05\"0\n\tReply_inf\x12\x0e\n\x06status\x18\x01 \x01(\t\x12\x13\n\x0binformation\x18\x02 \x01(\t2?\n\x0bSynchronism\x12\x30\n\x03Syn\x12\x0f.helloworld.Inf\x1a\x14.helloworld.Syn_data\"\x00\x30\x01\x32\xf3\x0c\n\x07Greeter\x12>\n\x08SayHello\x12\x18.helloworld.HelloRequest\x1a\x16.helloworld.HelloReply\"\x00\x12\x35\n\x05Login\x12\x13.helloworld.Login_m\x1a\x15.helloworld.Reply_inf\"\x00\x12\x36\n\x07Sign_up\x12\x12.helloworld.Sign_m\x1a\x15.helloworld.Reply_inf\"\x00\x12\x36\n\x08User_inf\x12\x0f.helloworld.Inf\x1a\x17.helloworld.User_detail\"\x00\x12?\n\x0fSearch_username\x12\x0f.helloworld.Inf\x1a\x19.helloworld.Search_result\"\x00\x12<\n\nAdd_friend\x12\x1b.helloworld.Repeated_string\x1a\x0f.helloworld.Inf\"\x00\x12?\n\rDelete_friend\x12\x1b.helloworld.Repeated_string\x1a\x0f.helloworld.Inf\"\x00\x12\x38\n\x0c\x43reate_share\x12\x15.helloworld.Share_inf\x1a\x0f.helloworld.Inf\"\x00\x12\x37\n\x0b\x44\x65lete_bill\x12\x15.helloworld.Share_inf\x1a\x0f.helloworld.Inf\"\x00\x12\x43\n\x0cObtain_bills\x12\x18.helloworld.Bill_request\x1a\x15.helloworld.Share_inf\"\x00\x30\x01\x12\x32\n\x08Send_Img\x12\x11.helloworld.Image\x1a\x0f.helloworld.Inf\"\x00(\x01\x12\x41\n\x0bReceive_Img\x12\x1b.helloworld.Repeated_string\x1a\x11.helloworld.Image\"\x00\x30\x01\x12\x32\n\x0cReset_Status\x12\x0f.helloworld.Inf\x1a\x0f.helloworld.Inf\"\x00\x12\x36\n\x0cSend_request\x12\x13.helloworld.Request\x1a\x0f.helloworld.Inf\"\x00\x12:\n\x0eObtain_request\x12\x0f.helloworld.Inf\x1a\x13.helloworld.Request\"\x00\x30\x01\x12=\n\x11Obtain_requestLog\x12\x0f.helloworld.Inf\x1a\x13.helloworld.Request\"\x00\x30\x01\x12\x44\n\x18Obtain_requestLogHistory\x12\x0f.helloworld.Inf\x1a\x13.helloworld.Request\"\x00\x30\x01\x12;\n\x10Request_response\x12\x14.helloworld.Response\x1a\x0f.helloworld.Inf\"\x00\x12;\n\x0bMakePayment\x12\x17.helloworld.BillPayment\x1a\x0f.helloworld.Inf\"\x00(\x01\x12@\n\x10IgnoreRequestLog\x12\x19.helloworld.IgnoreMessage\x1a\x0f.helloworld.Inf\"\x00\x12;\n\x11\x43reate_requestLog\x12\x13.helloworld.Request\x1a\x0f.helloworld.Inf\"\x00\x12\x42\n\x10Send_DeviceToken\x12\x1b.helloworld.Repeated_string\x1a\x0f.helloworld.Inf\"\x00\x12\x38\n\x0eObtain_setting\x12\x0f.helloworld.Inf\x1a\x13.helloworld.Setting\"\x00\x12\x37\n\rReset_setting\x12\x13.helloworld.Setting\x1a\x0f.helloworld.Inf\"\x00\x12\x39\n\x0eReset_userInfo\x12\x14.helloworld.UserInfo\x1a\x0f.helloworld.Inf\"\x00\x12:\n\x0fObtain_userInfo\x12\x0f.helloworld.Inf\x1a\x14.helloworld.UserInfo\"\x00\x12>\n\x18Update_user_lastModified\x12\x0f.helloworld.Inf\x1a\x0f.helloworld.Inf\"\x00\x42\x12\n\x10io.grpc.examplesb\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_LOGIN_M = _descriptor.Descriptor(
  name='Login_m',
  full_name='helloworld.Login_m',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='username', full_name='helloworld.Login_m.username', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='password', full_name='helloworld.Login_m.password', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=28,
  serialized_end=73,
)


_SIGN_M = _descriptor.Descriptor(
  name='Sign_m',
  full_name='helloworld.Sign_m',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='username', full_name='helloworld.Sign_m.username', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='password', full_name='helloworld.Sign_m.password', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='email', full_name='helloworld.Sign_m.email', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=75,
  serialized_end=134,
)


_INF = _descriptor.Descriptor(
  name='Inf',
  full_name='helloworld.Inf',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='information', full_name='helloworld.Inf.information', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=136,
  serialized_end=162,
)


_REPEATED_STRING = _descriptor.Descriptor(
  name='Repeated_string',
  full_name='helloworld.Repeated_string',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='content', full_name='helloworld.Repeated_string.content', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=164,
  serialized_end=198,
)


_SEARCH_RESULT = _descriptor.Descriptor(
  name='Search_result',
  full_name='helloworld.Search_result',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='username', full_name='helloworld.Search_result.username', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='user_id', full_name='helloworld.Search_result.user_id', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='user_icon', full_name='helloworld.Search_result.user_icon', index=2,
      number=3, type=12, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=200,
  serialized_end=269,
)


_USER_DETAIL = _descriptor.Descriptor(
  name='User_detail',
  full_name='helloworld.User_detail',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='username', full_name='helloworld.User_detail.username', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='user_id', full_name='helloworld.User_detail.user_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='email', full_name='helloworld.User_detail.email', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='friends_name', full_name='helloworld.User_detail.friends_name', index=3,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='friends_id', full_name='helloworld.User_detail.friends_id', index=4,
      number=5, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='friends_lastModified', full_name='helloworld.User_detail.friends_lastModified', index=5,
      number=6, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=272,
  serialized_end=407,
)


_SHARE_INF = _descriptor.Descriptor(
  name='Share_inf',
  full_name='helloworld.Share_inf',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='creater', full_name='helloworld.Share_inf.creater', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='amount', full_name='helloworld.Share_inf.amount', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='helloworld.Share_inf.type', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='paidBy', full_name='helloworld.Share_inf.paidBy', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='helloworld.Share_inf.data', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='note', full_name='helloworld.Share_inf.note', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='image', full_name='helloworld.Share_inf.image', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='members', full_name='helloworld.Share_inf.members', index=7,
      number=8, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='members_count', full_name='helloworld.Share_inf.members_count', index=8,
      number=9, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bill_id', full_name='helloworld.Share_inf.bill_id', index=9,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='paidStatus', full_name='helloworld.Share_inf.paidStatus', index=10,
      number=11, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='typeIcon', full_name='helloworld.Share_inf.typeIcon', index=11,
      number=12, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=410,
  serialized_end=622,
)


_BILL_REQUEST = _descriptor.Descriptor(
  name='Bill_request',
  full_name='helloworld.Bill_request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='username', full_name='helloworld.Bill_request.username', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start', full_name='helloworld.Bill_request.start', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='amount', full_name='helloworld.Bill_request.amount', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=624,
  serialized_end=687,
)


_SYN_DATA = _descriptor.Descriptor(
  name='Syn_data',
  full_name='helloworld.Syn_data',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='friend', full_name='helloworld.Syn_data.friend', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bill', full_name='helloworld.Syn_data.bill', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='delete', full_name='helloworld.Syn_data.delete', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='request', full_name='helloworld.Syn_data.request', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=689,
  serialized_end=762,
)


_HELLOREQUEST = _descriptor.Descriptor(
  name='HelloRequest',
  full_name='helloworld.HelloRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='helloworld.HelloRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=764,
  serialized_end=792,
)


_HELLOREPLY = _descriptor.Descriptor(
  name='HelloReply',
  full_name='helloworld.HelloReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='helloworld.HelloReply.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=794,
  serialized_end=823,
)


_IMAGE = _descriptor.Descriptor(
  name='Image',
  full_name='helloworld.Image',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='helloworld.Image.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='data', full_name='helloworld.Image.data', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=825,
  serialized_end=860,
)


_REQUEST = _descriptor.Descriptor(
  name='Request',
  full_name='helloworld.Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='request_id', full_name='helloworld.Request.request_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sender', full_name='helloworld.Request.sender', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='receiver', full_name='helloworld.Request.receiver', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='helloworld.Request.type', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='content', full_name='helloworld.Request.content', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='response', full_name='helloworld.Request.response', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='request_date', full_name='helloworld.Request.request_date', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='response_date', full_name='helloworld.Request.response_date', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ignore_from', full_name='helloworld.Request.ignore_from', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ignore_to', full_name='helloworld.Request.ignore_to', index=9,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=863,
  serialized_end=1060,
)


_RESPONSE = _descriptor.Descriptor(
  name='Response',
  full_name='helloworld.Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='request_id', full_name='helloworld.Response.request_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sender', full_name='helloworld.Response.sender', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='receiver', full_name='helloworld.Response.receiver', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='response', full_name='helloworld.Response.response', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='response_date', full_name='helloworld.Response.response_date', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1062,
  serialized_end=1167,
)


_IGNOREMESSAGE = _descriptor.Descriptor(
  name='IgnoreMessage',
  full_name='helloworld.IgnoreMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='requestLog_id', full_name='helloworld.IgnoreMessage.requestLog_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='user', full_name='helloworld.IgnoreMessage.user', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1169,
  serialized_end=1221,
)


_BILLPAYMENT = _descriptor.Descriptor(
  name='BillPayment',
  full_name='helloworld.BillPayment',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='bill_id', full_name='helloworld.BillPayment.bill_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='paidStatus', full_name='helloworld.BillPayment.paidStatus', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1223,
  serialized_end=1273,
)


_SETTING = _descriptor.Descriptor(
  name='Setting',
  full_name='helloworld.Setting',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='friendInvite', full_name='helloworld.Setting.friendInvite', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='newBill', full_name='helloworld.Setting.newBill', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='editedDeleteBill', full_name='helloworld.Setting.editedDeleteBill', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='commentBill', full_name='helloworld.Setting.commentBill', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='paidNotice', full_name='helloworld.Setting.paidNotice', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='user_id', full_name='helloworld.Setting.user_id', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1276,
  serialized_end=1408,
)


_USERINFO = _descriptor.Descriptor(
  name='UserInfo',
  full_name='helloworld.UserInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='user_id', full_name='helloworld.UserInfo.user_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='username', full_name='helloworld.UserInfo.username', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='password', full_name='helloworld.UserInfo.password', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='email', full_name='helloworld.UserInfo.email', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='currency', full_name='helloworld.UserInfo.currency', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1410,
  serialized_end=1506,
)


_REPLY_INF = _descriptor.Descriptor(
  name='Reply_inf',
  full_name='helloworld.Reply_inf',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='helloworld.Reply_inf.status', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='information', full_name='helloworld.Reply_inf.information', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1508,
  serialized_end=1556,
)

DESCRIPTOR.message_types_by_name['Login_m'] = _LOGIN_M
DESCRIPTOR.message_types_by_name['Sign_m'] = _SIGN_M
DESCRIPTOR.message_types_by_name['Inf'] = _INF
DESCRIPTOR.message_types_by_name['Repeated_string'] = _REPEATED_STRING
DESCRIPTOR.message_types_by_name['Search_result'] = _SEARCH_RESULT
DESCRIPTOR.message_types_by_name['User_detail'] = _USER_DETAIL
DESCRIPTOR.message_types_by_name['Share_inf'] = _SHARE_INF
DESCRIPTOR.message_types_by_name['Bill_request'] = _BILL_REQUEST
DESCRIPTOR.message_types_by_name['Syn_data'] = _SYN_DATA
DESCRIPTOR.message_types_by_name['HelloRequest'] = _HELLOREQUEST
DESCRIPTOR.message_types_by_name['HelloReply'] = _HELLOREPLY
DESCRIPTOR.message_types_by_name['Image'] = _IMAGE
DESCRIPTOR.message_types_by_name['Request'] = _REQUEST
DESCRIPTOR.message_types_by_name['Response'] = _RESPONSE
DESCRIPTOR.message_types_by_name['IgnoreMessage'] = _IGNOREMESSAGE
DESCRIPTOR.message_types_by_name['BillPayment'] = _BILLPAYMENT
DESCRIPTOR.message_types_by_name['Setting'] = _SETTING
DESCRIPTOR.message_types_by_name['UserInfo'] = _USERINFO
DESCRIPTOR.message_types_by_name['Reply_inf'] = _REPLY_INF

Login_m = _reflection.GeneratedProtocolMessageType('Login_m', (_message.Message,), dict(
  DESCRIPTOR = _LOGIN_M,
  __module__ = 'iShare_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.Login_m)
  ))
_sym_db.RegisterMessage(Login_m)

Sign_m = _reflection.GeneratedProtocolMessageType('Sign_m', (_message.Message,), dict(
  DESCRIPTOR = _SIGN_M,
  __module__ = 'iShare_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.Sign_m)
  ))
_sym_db.RegisterMessage(Sign_m)

Inf = _reflection.GeneratedProtocolMessageType('Inf', (_message.Message,), dict(
  DESCRIPTOR = _INF,
  __module__ = 'iShare_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.Inf)
  ))
_sym_db.RegisterMessage(Inf)

Repeated_string = _reflection.GeneratedProtocolMessageType('Repeated_string', (_message.Message,), dict(
  DESCRIPTOR = _REPEATED_STRING,
  __module__ = 'iShare_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.Repeated_string)
  ))
_sym_db.RegisterMessage(Repeated_string)

Search_result = _reflection.GeneratedProtocolMessageType('Search_result', (_message.Message,), dict(
  DESCRIPTOR = _SEARCH_RESULT,
  __module__ = 'iShare_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.Search_result)
  ))
_sym_db.RegisterMessage(Search_result)

User_detail = _reflection.GeneratedProtocolMessageType('User_detail', (_message.Message,), dict(
  DESCRIPTOR = _USER_DETAIL,
  __module__ = 'iShare_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.User_detail)
  ))
_sym_db.RegisterMessage(User_detail)

Share_inf = _reflection.GeneratedProtocolMessageType('Share_inf', (_message.Message,), dict(
  DESCRIPTOR = _SHARE_INF,
  __module__ = 'iShare_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.Share_inf)
  ))
_sym_db.RegisterMessage(Share_inf)

Bill_request = _reflection.GeneratedProtocolMessageType('Bill_request', (_message.Message,), dict(
  DESCRIPTOR = _BILL_REQUEST,
  __module__ = 'iShare_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.Bill_request)
  ))
_sym_db.RegisterMessage(Bill_request)

Syn_data = _reflection.GeneratedProtocolMessageType('Syn_data', (_message.Message,), dict(
  DESCRIPTOR = _SYN_DATA,
  __module__ = 'iShare_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.Syn_data)
  ))
_sym_db.RegisterMessage(Syn_data)

HelloRequest = _reflection.GeneratedProtocolMessageType('HelloRequest', (_message.Message,), dict(
  DESCRIPTOR = _HELLOREQUEST,
  __module__ = 'iShare_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.HelloRequest)
  ))
_sym_db.RegisterMessage(HelloRequest)

HelloReply = _reflection.GeneratedProtocolMessageType('HelloReply', (_message.Message,), dict(
  DESCRIPTOR = _HELLOREPLY,
  __module__ = 'iShare_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.HelloReply)
  ))
_sym_db.RegisterMessage(HelloReply)

Image = _reflection.GeneratedProtocolMessageType('Image', (_message.Message,), dict(
  DESCRIPTOR = _IMAGE,
  __module__ = 'iShare_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.Image)
  ))
_sym_db.RegisterMessage(Image)

Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), dict(
  DESCRIPTOR = _REQUEST,
  __module__ = 'iShare_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.Request)
  ))
_sym_db.RegisterMessage(Request)

Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), dict(
  DESCRIPTOR = _RESPONSE,
  __module__ = 'iShare_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.Response)
  ))
_sym_db.RegisterMessage(Response)

IgnoreMessage = _reflection.GeneratedProtocolMessageType('IgnoreMessage', (_message.Message,), dict(
  DESCRIPTOR = _IGNOREMESSAGE,
  __module__ = 'iShare_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.IgnoreMessage)
  ))
_sym_db.RegisterMessage(IgnoreMessage)

BillPayment = _reflection.GeneratedProtocolMessageType('BillPayment', (_message.Message,), dict(
  DESCRIPTOR = _BILLPAYMENT,
  __module__ = 'iShare_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.BillPayment)
  ))
_sym_db.RegisterMessage(BillPayment)

Setting = _reflection.GeneratedProtocolMessageType('Setting', (_message.Message,), dict(
  DESCRIPTOR = _SETTING,
  __module__ = 'iShare_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.Setting)
  ))
_sym_db.RegisterMessage(Setting)

UserInfo = _reflection.GeneratedProtocolMessageType('UserInfo', (_message.Message,), dict(
  DESCRIPTOR = _USERINFO,
  __module__ = 'iShare_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.UserInfo)
  ))
_sym_db.RegisterMessage(UserInfo)

Reply_inf = _reflection.GeneratedProtocolMessageType('Reply_inf', (_message.Message,), dict(
  DESCRIPTOR = _REPLY_INF,
  __module__ = 'iShare_pb2'
  # @@protoc_insertion_point(class_scope:helloworld.Reply_inf)
  ))
_sym_db.RegisterMessage(Reply_inf)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\020io.grpc.examples'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class SynchronismStub(object):

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.Syn = channel.unary_stream(
          '/helloworld.Synchronism/Syn',
          request_serializer=Inf.SerializeToString,
          response_deserializer=Syn_data.FromString,
          )


  class SynchronismServicer(object):

    def Syn(self, request, context):
      """do no need update
      A server-to-client streaming RPC

      start after terminal finish basic work. keep synchronism with S
      input    User.username
      output   User.synchronism<friend, bill, delete, request>
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_SynchronismServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'Syn': grpc.unary_stream_rpc_method_handler(
            servicer.Syn,
            request_deserializer=Inf.FromString,
            response_serializer=Syn_data.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'helloworld.Synchronism', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class GreeterStub(object):
    """The greeting service definition.
    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.SayHello = channel.unary_unary(
          '/helloworld.Greeter/SayHello',
          request_serializer=HelloRequest.SerializeToString,
          response_deserializer=HelloReply.FromString,
          )
      self.Login = channel.unary_unary(
          '/helloworld.Greeter/Login',
          request_serializer=Login_m.SerializeToString,
          response_deserializer=Reply_inf.FromString,
          )
      self.Sign_up = channel.unary_unary(
          '/helloworld.Greeter/Sign_up',
          request_serializer=Sign_m.SerializeToString,
          response_deserializer=Reply_inf.FromString,
          )
      self.User_inf = channel.unary_unary(
          '/helloworld.Greeter/User_inf',
          request_serializer=Inf.SerializeToString,
          response_deserializer=User_detail.FromString,
          )
      self.Search_username = channel.unary_unary(
          '/helloworld.Greeter/Search_username',
          request_serializer=Inf.SerializeToString,
          response_deserializer=Search_result.FromString,
          )
      self.Add_friend = channel.unary_unary(
          '/helloworld.Greeter/Add_friend',
          request_serializer=Repeated_string.SerializeToString,
          response_deserializer=Inf.FromString,
          )
      self.Delete_friend = channel.unary_unary(
          '/helloworld.Greeter/Delete_friend',
          request_serializer=Repeated_string.SerializeToString,
          response_deserializer=Inf.FromString,
          )
      self.Create_share = channel.unary_unary(
          '/helloworld.Greeter/Create_share',
          request_serializer=Share_inf.SerializeToString,
          response_deserializer=Inf.FromString,
          )
      self.Delete_bill = channel.unary_unary(
          '/helloworld.Greeter/Delete_bill',
          request_serializer=Share_inf.SerializeToString,
          response_deserializer=Inf.FromString,
          )
      self.Obtain_bills = channel.unary_stream(
          '/helloworld.Greeter/Obtain_bills',
          request_serializer=Bill_request.SerializeToString,
          response_deserializer=Share_inf.FromString,
          )
      self.Send_Img = channel.stream_unary(
          '/helloworld.Greeter/Send_Img',
          request_serializer=Image.SerializeToString,
          response_deserializer=Inf.FromString,
          )
      self.Receive_Img = channel.unary_stream(
          '/helloworld.Greeter/Receive_Img',
          request_serializer=Repeated_string.SerializeToString,
          response_deserializer=Image.FromString,
          )
      self.Reset_Status = channel.unary_unary(
          '/helloworld.Greeter/Reset_Status',
          request_serializer=Inf.SerializeToString,
          response_deserializer=Inf.FromString,
          )
      self.Send_request = channel.unary_unary(
          '/helloworld.Greeter/Send_request',
          request_serializer=Request.SerializeToString,
          response_deserializer=Inf.FromString,
          )
      self.Obtain_request = channel.unary_stream(
          '/helloworld.Greeter/Obtain_request',
          request_serializer=Inf.SerializeToString,
          response_deserializer=Request.FromString,
          )
      self.Obtain_requestLog = channel.unary_stream(
          '/helloworld.Greeter/Obtain_requestLog',
          request_serializer=Inf.SerializeToString,
          response_deserializer=Request.FromString,
          )
      self.Obtain_requestLogHistory = channel.unary_stream(
          '/helloworld.Greeter/Obtain_requestLogHistory',
          request_serializer=Inf.SerializeToString,
          response_deserializer=Request.FromString,
          )
      self.Request_response = channel.unary_unary(
          '/helloworld.Greeter/Request_response',
          request_serializer=Response.SerializeToString,
          response_deserializer=Inf.FromString,
          )
      self.MakePayment = channel.stream_unary(
          '/helloworld.Greeter/MakePayment',
          request_serializer=BillPayment.SerializeToString,
          response_deserializer=Inf.FromString,
          )
      self.IgnoreRequestLog = channel.unary_unary(
          '/helloworld.Greeter/IgnoreRequestLog',
          request_serializer=IgnoreMessage.SerializeToString,
          response_deserializer=Inf.FromString,
          )
      self.Create_requestLog = channel.unary_unary(
          '/helloworld.Greeter/Create_requestLog',
          request_serializer=Request.SerializeToString,
          response_deserializer=Inf.FromString,
          )
      self.Send_DeviceToken = channel.unary_unary(
          '/helloworld.Greeter/Send_DeviceToken',
          request_serializer=Repeated_string.SerializeToString,
          response_deserializer=Inf.FromString,
          )
      self.Obtain_setting = channel.unary_unary(
          '/helloworld.Greeter/Obtain_setting',
          request_serializer=Inf.SerializeToString,
          response_deserializer=Setting.FromString,
          )
      self.Reset_setting = channel.unary_unary(
          '/helloworld.Greeter/Reset_setting',
          request_serializer=Setting.SerializeToString,
          response_deserializer=Inf.FromString,
          )
      self.Reset_userInfo = channel.unary_unary(
          '/helloworld.Greeter/Reset_userInfo',
          request_serializer=UserInfo.SerializeToString,
          response_deserializer=Inf.FromString,
          )
      self.Obtain_userInfo = channel.unary_unary(
          '/helloworld.Greeter/Obtain_userInfo',
          request_serializer=Inf.SerializeToString,
          response_deserializer=UserInfo.FromString,
          )
      self.Update_user_lastModified = channel.unary_unary(
          '/helloworld.Greeter/Update_user_lastModified',
          request_serializer=Inf.SerializeToString,
          response_deserializer=Inf.FromString,
          )


  class GreeterServicer(object):
    """The greeting service definition.
    """

    def SayHello(self, request, context):
      """Sends a greeting
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
      """


      rpc TimeTest (Inf) returns (stream Inf) {}

      updated
      A simple RPC
      login_m(usename, password)
      Reply_inf(status, information) : status(CANCALLED, OK) : information(reason why CANCALLED or user_id);
      replye->information can be used as notice
      login rpc
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Sign_up(self, request, context):
      """updated
      A simple RPC
      sign_m(username, password, email)
      Reply_inf(status, information) : status(CANCALLED, OK) : information(reason why CANCALLED or user_id);
      sign in rpc
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def User_inf(self, request, context):
      """updated
      A simple RPC

      input    user_id
      output   username, user_id, email, friends_name, friends_id
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Search_username(self, request, context):
      """do not need update

      A simple RPC

      search user by username
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Add_friend(self, request, context):
      """updated
      A simple RPC
      input username

      add new friend
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Delete_friend(self, request, context):
      """updated
      A simple RPC
      input user_id

      delete a friend
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Create_share(self, request, context):
      """updated
      A simple RPC

      create a new share record
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Delete_bill(self, request, context):
      """updated
      delete a bill

      use bill_id to identify bill record
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Obtain_bills(self, request, context):
      """updated


      input username amount(??? / all)
      output Bills()
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Send_Img(self, request_iterator, context):
      """do not need to update


      input Three byte package imageNmae, imagePath, imageData
      output "Get image"
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Receive_Img(self, request, context):
      """do not need update


      input folderName - imageName - imageName -.........
      outut Image bytes package filled data and name
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Reset_Status(self, request, context):
      """updated
      set user synchronism_delete = 0


      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Send_request(self, request, context):
      """updated
      # request system rpc
      send request. add friend or payment
      enum-type : friendInvite, payment
      from, to use username rather than userID
      content formate SENDER:%@ RECEVER:%@ FIRSTID:%@ LASTID:%@ COUNT:%ld
      sender or receiver is uername
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Obtain_request(self, request, context):
      """updated
      Inf contain user_id


      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Obtain_requestLog(self, request, context):
      """updated
      return requestLog has not been read


      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Obtain_requestLogHistory(self, request, context):
      """updated
      return all requestLog


      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Request_response(self, request, context):
      """updated



      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def MakePayment(self, request_iterator, context):
      """do not nedd update



      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def IgnoreRequestLog(self, request, context):
      """updated



      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Create_requestLog(self, request, context):
      """


      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Send_DeviceToken(self, request, context):
      """updated



      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Obtain_setting(self, request, context):
      """send username


      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Reset_setting(self, request, context):
      """


      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Reset_userInfo(self, request, context):
      """


      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Obtain_userInfo(self, request, context):
      """


      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def Update_user_lastModified(self, request, context):
      """


      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_GreeterServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'SayHello': grpc.unary_unary_rpc_method_handler(
            servicer.SayHello,
            request_deserializer=HelloRequest.FromString,
            response_serializer=HelloReply.SerializeToString,
        ),
        'Login': grpc.unary_unary_rpc_method_handler(
            servicer.Login,
            request_deserializer=Login_m.FromString,
            response_serializer=Reply_inf.SerializeToString,
        ),
        'Sign_up': grpc.unary_unary_rpc_method_handler(
            servicer.Sign_up,
            request_deserializer=Sign_m.FromString,
            response_serializer=Reply_inf.SerializeToString,
        ),
        'User_inf': grpc.unary_unary_rpc_method_handler(
            servicer.User_inf,
            request_deserializer=Inf.FromString,
            response_serializer=User_detail.SerializeToString,
        ),
        'Search_username': grpc.unary_unary_rpc_method_handler(
            servicer.Search_username,
            request_deserializer=Inf.FromString,
            response_serializer=Search_result.SerializeToString,
        ),
        'Add_friend': grpc.unary_unary_rpc_method_handler(
            servicer.Add_friend,
            request_deserializer=Repeated_string.FromString,
            response_serializer=Inf.SerializeToString,
        ),
        'Delete_friend': grpc.unary_unary_rpc_method_handler(
            servicer.Delete_friend,
            request_deserializer=Repeated_string.FromString,
            response_serializer=Inf.SerializeToString,
        ),
        'Create_share': grpc.unary_unary_rpc_method_handler(
            servicer.Create_share,
            request_deserializer=Share_inf.FromString,
            response_serializer=Inf.SerializeToString,
        ),
        'Delete_bill': grpc.unary_unary_rpc_method_handler(
            servicer.Delete_bill,
            request_deserializer=Share_inf.FromString,
            response_serializer=Inf.SerializeToString,
        ),
        'Obtain_bills': grpc.unary_stream_rpc_method_handler(
            servicer.Obtain_bills,
            request_deserializer=Bill_request.FromString,
            response_serializer=Share_inf.SerializeToString,
        ),
        'Send_Img': grpc.stream_unary_rpc_method_handler(
            servicer.Send_Img,
            request_deserializer=Image.FromString,
            response_serializer=Inf.SerializeToString,
        ),
        'Receive_Img': grpc.unary_stream_rpc_method_handler(
            servicer.Receive_Img,
            request_deserializer=Repeated_string.FromString,
            response_serializer=Image.SerializeToString,
        ),
        'Reset_Status': grpc.unary_unary_rpc_method_handler(
            servicer.Reset_Status,
            request_deserializer=Inf.FromString,
            response_serializer=Inf.SerializeToString,
        ),
        'Send_request': grpc.unary_unary_rpc_method_handler(
            servicer.Send_request,
            request_deserializer=Request.FromString,
            response_serializer=Inf.SerializeToString,
        ),
        'Obtain_request': grpc.unary_stream_rpc_method_handler(
            servicer.Obtain_request,
            request_deserializer=Inf.FromString,
            response_serializer=Request.SerializeToString,
        ),
        'Obtain_requestLog': grpc.unary_stream_rpc_method_handler(
            servicer.Obtain_requestLog,
            request_deserializer=Inf.FromString,
            response_serializer=Request.SerializeToString,
        ),
        'Obtain_requestLogHistory': grpc.unary_stream_rpc_method_handler(
            servicer.Obtain_requestLogHistory,
            request_deserializer=Inf.FromString,
            response_serializer=Request.SerializeToString,
        ),
        'Request_response': grpc.unary_unary_rpc_method_handler(
            servicer.Request_response,
            request_deserializer=Response.FromString,
            response_serializer=Inf.SerializeToString,
        ),
        'MakePayment': grpc.stream_unary_rpc_method_handler(
            servicer.MakePayment,
            request_deserializer=BillPayment.FromString,
            response_serializer=Inf.SerializeToString,
        ),
        'IgnoreRequestLog': grpc.unary_unary_rpc_method_handler(
            servicer.IgnoreRequestLog,
            request_deserializer=IgnoreMessage.FromString,
            response_serializer=Inf.SerializeToString,
        ),
        'Create_requestLog': grpc.unary_unary_rpc_method_handler(
            servicer.Create_requestLog,
            request_deserializer=Request.FromString,
            response_serializer=Inf.SerializeToString,
        ),
        'Send_DeviceToken': grpc.unary_unary_rpc_method_handler(
            servicer.Send_DeviceToken,
            request_deserializer=Repeated_string.FromString,
            response_serializer=Inf.SerializeToString,
        ),
        'Obtain_setting': grpc.unary_unary_rpc_method_handler(
            servicer.Obtain_setting,
            request_deserializer=Inf.FromString,
            response_serializer=Setting.SerializeToString,
        ),
        'Reset_setting': grpc.unary_unary_rpc_method_handler(
            servicer.Reset_setting,
            request_deserializer=Setting.FromString,
            response_serializer=Inf.SerializeToString,
        ),
        'Reset_userInfo': grpc.unary_unary_rpc_method_handler(
            servicer.Reset_userInfo,
            request_deserializer=UserInfo.FromString,
            response_serializer=Inf.SerializeToString,
        ),
        'Obtain_userInfo': grpc.unary_unary_rpc_method_handler(
            servicer.Obtain_userInfo,
            request_deserializer=Inf.FromString,
            response_serializer=UserInfo.SerializeToString,
        ),
        'Update_user_lastModified': grpc.unary_unary_rpc_method_handler(
            servicer.Update_user_lastModified,
            request_deserializer=Inf.FromString,
            response_serializer=Inf.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'helloworld.Greeter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaSynchronismServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def Syn(self, request, context):
      """do no need update
      A server-to-client streaming RPC

      start after terminal finish basic work. keep synchronism with S
      input    User.username
      output   User.synchronism<friend, bill, delete, request>
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaSynchronismStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    def Syn(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """do no need update
      A server-to-client streaming RPC

      start after terminal finish basic work. keep synchronism with S
      input    User.username
      output   User.synchronism<friend, bill, delete, request>
      """
      raise NotImplementedError()


  def beta_create_Synchronism_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('helloworld.Synchronism', 'Syn'): Inf.FromString,
    }
    response_serializers = {
      ('helloworld.Synchronism', 'Syn'): Syn_data.SerializeToString,
    }
    method_implementations = {
      ('helloworld.Synchronism', 'Syn'): face_utilities.unary_stream_inline(servicer.Syn),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Synchronism_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('helloworld.Synchronism', 'Syn'): Inf.SerializeToString,
    }
    response_deserializers = {
      ('helloworld.Synchronism', 'Syn'): Syn_data.FromString,
    }
    cardinalities = {
      'Syn': cardinality.Cardinality.UNARY_STREAM,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'helloworld.Synchronism', cardinalities, options=stub_options)


  class BetaGreeterServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """The greeting service definition.
    """
    def SayHello(self, request, context):
      """Sends a greeting
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Login(self, request, context):
      """


      rpc TimeTest (Inf) returns (stream Inf) {}

      updated
      A simple RPC
      login_m(usename, password)
      Reply_inf(status, information) : status(CANCALLED, OK) : information(reason why CANCALLED or user_id);
      replye->information can be used as notice
      login rpc
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Sign_up(self, request, context):
      """updated
      A simple RPC
      sign_m(username, password, email)
      Reply_inf(status, information) : status(CANCALLED, OK) : information(reason why CANCALLED or user_id);
      sign in rpc
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def User_inf(self, request, context):
      """updated
      A simple RPC

      input    user_id
      output   username, user_id, email, friends_name, friends_id
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Search_username(self, request, context):
      """do not need update

      A simple RPC

      search user by username
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Add_friend(self, request, context):
      """updated
      A simple RPC
      input username

      add new friend
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Delete_friend(self, request, context):
      """updated
      A simple RPC
      input user_id

      delete a friend
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Create_share(self, request, context):
      """updated
      A simple RPC

      create a new share record
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Delete_bill(self, request, context):
      """updated
      delete a bill

      use bill_id to identify bill record
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Obtain_bills(self, request, context):
      """updated


      input username amount(??? / all)
      output Bills()
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Send_Img(self, request_iterator, context):
      """do not need to update


      input Three byte package imageNmae, imagePath, imageData
      output "Get image"
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Receive_Img(self, request, context):
      """do not need update


      input folderName - imageName - imageName -.........
      outut Image bytes package filled data and name
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Reset_Status(self, request, context):
      """updated
      set user synchronism_delete = 0


      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Send_request(self, request, context):
      """updated
      # request system rpc
      send request. add friend or payment
      enum-type : friendInvite, payment
      from, to use username rather than userID
      content formate SENDER:%@ RECEVER:%@ FIRSTID:%@ LASTID:%@ COUNT:%ld
      sender or receiver is uername
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Obtain_request(self, request, context):
      """updated
      Inf contain user_id


      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Obtain_requestLog(self, request, context):
      """updated
      return requestLog has not been read


      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Obtain_requestLogHistory(self, request, context):
      """updated
      return all requestLog


      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Request_response(self, request, context):
      """updated



      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def MakePayment(self, request_iterator, context):
      """do not nedd update



      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def IgnoreRequestLog(self, request, context):
      """updated



      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Create_requestLog(self, request, context):
      """


      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Send_DeviceToken(self, request, context):
      """updated



      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Obtain_setting(self, request, context):
      """send username


      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Reset_setting(self, request, context):
      """


      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Reset_userInfo(self, request, context):
      """


      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Obtain_userInfo(self, request, context):
      """


      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def Update_user_lastModified(self, request, context):
      """


      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaGreeterStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """The greeting service definition.
    """
    def SayHello(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Sends a greeting
      """
      raise NotImplementedError()
    SayHello.future = None
    def Login(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """


      rpc TimeTest (Inf) returns (stream Inf) {}

      updated
      A simple RPC
      login_m(usename, password)
      Reply_inf(status, information) : status(CANCALLED, OK) : information(reason why CANCALLED or user_id);
      replye->information can be used as notice
      login rpc
      """
      raise NotImplementedError()
    Login.future = None
    def Sign_up(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """updated
      A simple RPC
      sign_m(username, password, email)
      Reply_inf(status, information) : status(CANCALLED, OK) : information(reason why CANCALLED or user_id);
      sign in rpc
      """
      raise NotImplementedError()
    Sign_up.future = None
    def User_inf(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """updated
      A simple RPC

      input    user_id
      output   username, user_id, email, friends_name, friends_id
      """
      raise NotImplementedError()
    User_inf.future = None
    def Search_username(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """do not need update

      A simple RPC

      search user by username
      """
      raise NotImplementedError()
    Search_username.future = None
    def Add_friend(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """updated
      A simple RPC
      input username

      add new friend
      """
      raise NotImplementedError()
    Add_friend.future = None
    def Delete_friend(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """updated
      A simple RPC
      input user_id

      delete a friend
      """
      raise NotImplementedError()
    Delete_friend.future = None
    def Create_share(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """updated
      A simple RPC

      create a new share record
      """
      raise NotImplementedError()
    Create_share.future = None
    def Delete_bill(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """updated
      delete a bill

      use bill_id to identify bill record
      """
      raise NotImplementedError()
    Delete_bill.future = None
    def Obtain_bills(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """updated


      input username amount(??? / all)
      output Bills()
      """
      raise NotImplementedError()
    def Send_Img(self, request_iterator, timeout, metadata=None, with_call=False, protocol_options=None):
      """do not need to update


      input Three byte package imageNmae, imagePath, imageData
      output "Get image"
      """
      raise NotImplementedError()
    Send_Img.future = None
    def Receive_Img(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """do not need update


      input folderName - imageName - imageName -.........
      outut Image bytes package filled data and name
      """
      raise NotImplementedError()
    def Reset_Status(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """updated
      set user synchronism_delete = 0


      """
      raise NotImplementedError()
    Reset_Status.future = None
    def Send_request(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """updated
      # request system rpc
      send request. add friend or payment
      enum-type : friendInvite, payment
      from, to use username rather than userID
      content formate SENDER:%@ RECEVER:%@ FIRSTID:%@ LASTID:%@ COUNT:%ld
      sender or receiver is uername
      """
      raise NotImplementedError()
    Send_request.future = None
    def Obtain_request(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """updated
      Inf contain user_id


      """
      raise NotImplementedError()
    def Obtain_requestLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """updated
      return requestLog has not been read


      """
      raise NotImplementedError()
    def Obtain_requestLogHistory(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """updated
      return all requestLog


      """
      raise NotImplementedError()
    def Request_response(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """updated



      """
      raise NotImplementedError()
    Request_response.future = None
    def MakePayment(self, request_iterator, timeout, metadata=None, with_call=False, protocol_options=None):
      """do not nedd update



      """
      raise NotImplementedError()
    MakePayment.future = None
    def IgnoreRequestLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """updated



      """
      raise NotImplementedError()
    IgnoreRequestLog.future = None
    def Create_requestLog(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """


      """
      raise NotImplementedError()
    Create_requestLog.future = None
    def Send_DeviceToken(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """updated



      """
      raise NotImplementedError()
    Send_DeviceToken.future = None
    def Obtain_setting(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """send username


      """
      raise NotImplementedError()
    Obtain_setting.future = None
    def Reset_setting(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """


      """
      raise NotImplementedError()
    Reset_setting.future = None
    def Reset_userInfo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """


      """
      raise NotImplementedError()
    Reset_userInfo.future = None
    def Obtain_userInfo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """


      """
      raise NotImplementedError()
    Obtain_userInfo.future = None
    def Update_user_lastModified(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """


      """
      raise NotImplementedError()
    Update_user_lastModified.future = None


  def beta_create_Greeter_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('helloworld.Greeter', 'Add_friend'): Repeated_string.FromString,
      ('helloworld.Greeter', 'Create_requestLog'): Request.FromString,
      ('helloworld.Greeter', 'Create_share'): Share_inf.FromString,
      ('helloworld.Greeter', 'Delete_bill'): Share_inf.FromString,
      ('helloworld.Greeter', 'Delete_friend'): Repeated_string.FromString,
      ('helloworld.Greeter', 'IgnoreRequestLog'): IgnoreMessage.FromString,
      ('helloworld.Greeter', 'Login'): Login_m.FromString,
      ('helloworld.Greeter', 'MakePayment'): BillPayment.FromString,
      ('helloworld.Greeter', 'Obtain_bills'): Bill_request.FromString,
      ('helloworld.Greeter', 'Obtain_request'): Inf.FromString,
      ('helloworld.Greeter', 'Obtain_requestLog'): Inf.FromString,
      ('helloworld.Greeter', 'Obtain_requestLogHistory'): Inf.FromString,
      ('helloworld.Greeter', 'Obtain_setting'): Inf.FromString,
      ('helloworld.Greeter', 'Obtain_userInfo'): Inf.FromString,
      ('helloworld.Greeter', 'Receive_Img'): Repeated_string.FromString,
      ('helloworld.Greeter', 'Request_response'): Response.FromString,
      ('helloworld.Greeter', 'Reset_Status'): Inf.FromString,
      ('helloworld.Greeter', 'Reset_setting'): Setting.FromString,
      ('helloworld.Greeter', 'Reset_userInfo'): UserInfo.FromString,
      ('helloworld.Greeter', 'SayHello'): HelloRequest.FromString,
      ('helloworld.Greeter', 'Search_username'): Inf.FromString,
      ('helloworld.Greeter', 'Send_DeviceToken'): Repeated_string.FromString,
      ('helloworld.Greeter', 'Send_Img'): Image.FromString,
      ('helloworld.Greeter', 'Send_request'): Request.FromString,
      ('helloworld.Greeter', 'Sign_up'): Sign_m.FromString,
      ('helloworld.Greeter', 'Update_user_lastModified'): Inf.FromString,
      ('helloworld.Greeter', 'User_inf'): Inf.FromString,
    }
    response_serializers = {
      ('helloworld.Greeter', 'Add_friend'): Inf.SerializeToString,
      ('helloworld.Greeter', 'Create_requestLog'): Inf.SerializeToString,
      ('helloworld.Greeter', 'Create_share'): Inf.SerializeToString,
      ('helloworld.Greeter', 'Delete_bill'): Inf.SerializeToString,
      ('helloworld.Greeter', 'Delete_friend'): Inf.SerializeToString,
      ('helloworld.Greeter', 'IgnoreRequestLog'): Inf.SerializeToString,
      ('helloworld.Greeter', 'Login'): Reply_inf.SerializeToString,
      ('helloworld.Greeter', 'MakePayment'): Inf.SerializeToString,
      ('helloworld.Greeter', 'Obtain_bills'): Share_inf.SerializeToString,
      ('helloworld.Greeter', 'Obtain_request'): Request.SerializeToString,
      ('helloworld.Greeter', 'Obtain_requestLog'): Request.SerializeToString,
      ('helloworld.Greeter', 'Obtain_requestLogHistory'): Request.SerializeToString,
      ('helloworld.Greeter', 'Obtain_setting'): Setting.SerializeToString,
      ('helloworld.Greeter', 'Obtain_userInfo'): UserInfo.SerializeToString,
      ('helloworld.Greeter', 'Receive_Img'): Image.SerializeToString,
      ('helloworld.Greeter', 'Request_response'): Inf.SerializeToString,
      ('helloworld.Greeter', 'Reset_Status'): Inf.SerializeToString,
      ('helloworld.Greeter', 'Reset_setting'): Inf.SerializeToString,
      ('helloworld.Greeter', 'Reset_userInfo'): Inf.SerializeToString,
      ('helloworld.Greeter', 'SayHello'): HelloReply.SerializeToString,
      ('helloworld.Greeter', 'Search_username'): Search_result.SerializeToString,
      ('helloworld.Greeter', 'Send_DeviceToken'): Inf.SerializeToString,
      ('helloworld.Greeter', 'Send_Img'): Inf.SerializeToString,
      ('helloworld.Greeter', 'Send_request'): Inf.SerializeToString,
      ('helloworld.Greeter', 'Sign_up'): Reply_inf.SerializeToString,
      ('helloworld.Greeter', 'Update_user_lastModified'): Inf.SerializeToString,
      ('helloworld.Greeter', 'User_inf'): User_detail.SerializeToString,
    }
    method_implementations = {
      ('helloworld.Greeter', 'Add_friend'): face_utilities.unary_unary_inline(servicer.Add_friend),
      ('helloworld.Greeter', 'Create_requestLog'): face_utilities.unary_unary_inline(servicer.Create_requestLog),
      ('helloworld.Greeter', 'Create_share'): face_utilities.unary_unary_inline(servicer.Create_share),
      ('helloworld.Greeter', 'Delete_bill'): face_utilities.unary_unary_inline(servicer.Delete_bill),
      ('helloworld.Greeter', 'Delete_friend'): face_utilities.unary_unary_inline(servicer.Delete_friend),
      ('helloworld.Greeter', 'IgnoreRequestLog'): face_utilities.unary_unary_inline(servicer.IgnoreRequestLog),
      ('helloworld.Greeter', 'Login'): face_utilities.unary_unary_inline(servicer.Login),
      ('helloworld.Greeter', 'MakePayment'): face_utilities.stream_unary_inline(servicer.MakePayment),
      ('helloworld.Greeter', 'Obtain_bills'): face_utilities.unary_stream_inline(servicer.Obtain_bills),
      ('helloworld.Greeter', 'Obtain_request'): face_utilities.unary_stream_inline(servicer.Obtain_request),
      ('helloworld.Greeter', 'Obtain_requestLog'): face_utilities.unary_stream_inline(servicer.Obtain_requestLog),
      ('helloworld.Greeter', 'Obtain_requestLogHistory'): face_utilities.unary_stream_inline(servicer.Obtain_requestLogHistory),
      ('helloworld.Greeter', 'Obtain_setting'): face_utilities.unary_unary_inline(servicer.Obtain_setting),
      ('helloworld.Greeter', 'Obtain_userInfo'): face_utilities.unary_unary_inline(servicer.Obtain_userInfo),
      ('helloworld.Greeter', 'Receive_Img'): face_utilities.unary_stream_inline(servicer.Receive_Img),
      ('helloworld.Greeter', 'Request_response'): face_utilities.unary_unary_inline(servicer.Request_response),
      ('helloworld.Greeter', 'Reset_Status'): face_utilities.unary_unary_inline(servicer.Reset_Status),
      ('helloworld.Greeter', 'Reset_setting'): face_utilities.unary_unary_inline(servicer.Reset_setting),
      ('helloworld.Greeter', 'Reset_userInfo'): face_utilities.unary_unary_inline(servicer.Reset_userInfo),
      ('helloworld.Greeter', 'SayHello'): face_utilities.unary_unary_inline(servicer.SayHello),
      ('helloworld.Greeter', 'Search_username'): face_utilities.unary_unary_inline(servicer.Search_username),
      ('helloworld.Greeter', 'Send_DeviceToken'): face_utilities.unary_unary_inline(servicer.Send_DeviceToken),
      ('helloworld.Greeter', 'Send_Img'): face_utilities.stream_unary_inline(servicer.Send_Img),
      ('helloworld.Greeter', 'Send_request'): face_utilities.unary_unary_inline(servicer.Send_request),
      ('helloworld.Greeter', 'Sign_up'): face_utilities.unary_unary_inline(servicer.Sign_up),
      ('helloworld.Greeter', 'Update_user_lastModified'): face_utilities.unary_unary_inline(servicer.Update_user_lastModified),
      ('helloworld.Greeter', 'User_inf'): face_utilities.unary_unary_inline(servicer.User_inf),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Greeter_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('helloworld.Greeter', 'Add_friend'): Repeated_string.SerializeToString,
      ('helloworld.Greeter', 'Create_requestLog'): Request.SerializeToString,
      ('helloworld.Greeter', 'Create_share'): Share_inf.SerializeToString,
      ('helloworld.Greeter', 'Delete_bill'): Share_inf.SerializeToString,
      ('helloworld.Greeter', 'Delete_friend'): Repeated_string.SerializeToString,
      ('helloworld.Greeter', 'IgnoreRequestLog'): IgnoreMessage.SerializeToString,
      ('helloworld.Greeter', 'Login'): Login_m.SerializeToString,
      ('helloworld.Greeter', 'MakePayment'): BillPayment.SerializeToString,
      ('helloworld.Greeter', 'Obtain_bills'): Bill_request.SerializeToString,
      ('helloworld.Greeter', 'Obtain_request'): Inf.SerializeToString,
      ('helloworld.Greeter', 'Obtain_requestLog'): Inf.SerializeToString,
      ('helloworld.Greeter', 'Obtain_requestLogHistory'): Inf.SerializeToString,
      ('helloworld.Greeter', 'Obtain_setting'): Inf.SerializeToString,
      ('helloworld.Greeter', 'Obtain_userInfo'): Inf.SerializeToString,
      ('helloworld.Greeter', 'Receive_Img'): Repeated_string.SerializeToString,
      ('helloworld.Greeter', 'Request_response'): Response.SerializeToString,
      ('helloworld.Greeter', 'Reset_Status'): Inf.SerializeToString,
      ('helloworld.Greeter', 'Reset_setting'): Setting.SerializeToString,
      ('helloworld.Greeter', 'Reset_userInfo'): UserInfo.SerializeToString,
      ('helloworld.Greeter', 'SayHello'): HelloRequest.SerializeToString,
      ('helloworld.Greeter', 'Search_username'): Inf.SerializeToString,
      ('helloworld.Greeter', 'Send_DeviceToken'): Repeated_string.SerializeToString,
      ('helloworld.Greeter', 'Send_Img'): Image.SerializeToString,
      ('helloworld.Greeter', 'Send_request'): Request.SerializeToString,
      ('helloworld.Greeter', 'Sign_up'): Sign_m.SerializeToString,
      ('helloworld.Greeter', 'Update_user_lastModified'): Inf.SerializeToString,
      ('helloworld.Greeter', 'User_inf'): Inf.SerializeToString,
    }
    response_deserializers = {
      ('helloworld.Greeter', 'Add_friend'): Inf.FromString,
      ('helloworld.Greeter', 'Create_requestLog'): Inf.FromString,
      ('helloworld.Greeter', 'Create_share'): Inf.FromString,
      ('helloworld.Greeter', 'Delete_bill'): Inf.FromString,
      ('helloworld.Greeter', 'Delete_friend'): Inf.FromString,
      ('helloworld.Greeter', 'IgnoreRequestLog'): Inf.FromString,
      ('helloworld.Greeter', 'Login'): Reply_inf.FromString,
      ('helloworld.Greeter', 'MakePayment'): Inf.FromString,
      ('helloworld.Greeter', 'Obtain_bills'): Share_inf.FromString,
      ('helloworld.Greeter', 'Obtain_request'): Request.FromString,
      ('helloworld.Greeter', 'Obtain_requestLog'): Request.FromString,
      ('helloworld.Greeter', 'Obtain_requestLogHistory'): Request.FromString,
      ('helloworld.Greeter', 'Obtain_setting'): Setting.FromString,
      ('helloworld.Greeter', 'Obtain_userInfo'): UserInfo.FromString,
      ('helloworld.Greeter', 'Receive_Img'): Image.FromString,
      ('helloworld.Greeter', 'Request_response'): Inf.FromString,
      ('helloworld.Greeter', 'Reset_Status'): Inf.FromString,
      ('helloworld.Greeter', 'Reset_setting'): Inf.FromString,
      ('helloworld.Greeter', 'Reset_userInfo'): Inf.FromString,
      ('helloworld.Greeter', 'SayHello'): HelloReply.FromString,
      ('helloworld.Greeter', 'Search_username'): Search_result.FromString,
      ('helloworld.Greeter', 'Send_DeviceToken'): Inf.FromString,
      ('helloworld.Greeter', 'Send_Img'): Inf.FromString,
      ('helloworld.Greeter', 'Send_request'): Inf.FromString,
      ('helloworld.Greeter', 'Sign_up'): Reply_inf.FromString,
      ('helloworld.Greeter', 'Update_user_lastModified'): Inf.FromString,
      ('helloworld.Greeter', 'User_inf'): User_detail.FromString,
    }
    cardinalities = {
      'Add_friend': cardinality.Cardinality.UNARY_UNARY,
      'Create_requestLog': cardinality.Cardinality.UNARY_UNARY,
      'Create_share': cardinality.Cardinality.UNARY_UNARY,
      'Delete_bill': cardinality.Cardinality.UNARY_UNARY,
      'Delete_friend': cardinality.Cardinality.UNARY_UNARY,
      'IgnoreRequestLog': cardinality.Cardinality.UNARY_UNARY,
      'Login': cardinality.Cardinality.UNARY_UNARY,
      'MakePayment': cardinality.Cardinality.STREAM_UNARY,
      'Obtain_bills': cardinality.Cardinality.UNARY_STREAM,
      'Obtain_request': cardinality.Cardinality.UNARY_STREAM,
      'Obtain_requestLog': cardinality.Cardinality.UNARY_STREAM,
      'Obtain_requestLogHistory': cardinality.Cardinality.UNARY_STREAM,
      'Obtain_setting': cardinality.Cardinality.UNARY_UNARY,
      'Obtain_userInfo': cardinality.Cardinality.UNARY_UNARY,
      'Receive_Img': cardinality.Cardinality.UNARY_STREAM,
      'Request_response': cardinality.Cardinality.UNARY_UNARY,
      'Reset_Status': cardinality.Cardinality.UNARY_UNARY,
      'Reset_setting': cardinality.Cardinality.UNARY_UNARY,
      'Reset_userInfo': cardinality.Cardinality.UNARY_UNARY,
      'SayHello': cardinality.Cardinality.UNARY_UNARY,
      'Search_username': cardinality.Cardinality.UNARY_UNARY,
      'Send_DeviceToken': cardinality.Cardinality.UNARY_UNARY,
      'Send_Img': cardinality.Cardinality.STREAM_UNARY,
      'Send_request': cardinality.Cardinality.UNARY_UNARY,
      'Sign_up': cardinality.Cardinality.UNARY_UNARY,
      'Update_user_lastModified': cardinality.Cardinality.UNARY_UNARY,
      'User_inf': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'helloworld.Greeter', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
