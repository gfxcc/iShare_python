# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import iShare_pb2 as iShare__pb2


class SynchronismStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Syn = channel.unary_stream(
        '/helloworld.Synchronism/Syn',
        request_serializer=iShare__pb2.Inf.SerializeToString,
        response_deserializer=iShare__pb2.Syn_data.FromString,
        )


class SynchronismServicer(object):

  def Syn(self, request, context):
    """do no need update
    A server-to-client streaming RPC

    start after terminal finish basic work. keep synchronism with S
    input    User.username
    output   User.synchronism<friend, bill, delete, request>
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SynchronismServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Syn': grpc.unary_stream_rpc_method_handler(
          servicer.Syn,
          request_deserializer=iShare__pb2.Inf.FromString,
          response_serializer=iShare__pb2.Syn_data.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'helloworld.Synchronism', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class GreeterStub(object):
  """The greeting service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SayHello = channel.unary_unary(
        '/helloworld.Greeter/SayHello',
        request_serializer=iShare__pb2.HelloRequest.SerializeToString,
        response_deserializer=iShare__pb2.HelloReply.FromString,
        )
    self.Login = channel.unary_unary(
        '/helloworld.Greeter/Login',
        request_serializer=iShare__pb2.Login_m.SerializeToString,
        response_deserializer=iShare__pb2.Reply_inf.FromString,
        )
    self.Sign_up = channel.unary_unary(
        '/helloworld.Greeter/Sign_up',
        request_serializer=iShare__pb2.Sign_m.SerializeToString,
        response_deserializer=iShare__pb2.Reply_inf.FromString,
        )
    self.User_inf = channel.unary_unary(
        '/helloworld.Greeter/User_inf',
        request_serializer=iShare__pb2.Inf.SerializeToString,
        response_deserializer=iShare__pb2.User_detail.FromString,
        )
    self.Search_username = channel.unary_unary(
        '/helloworld.Greeter/Search_username',
        request_serializer=iShare__pb2.Inf.SerializeToString,
        response_deserializer=iShare__pb2.Search_result.FromString,
        )
    self.Add_friend = channel.unary_unary(
        '/helloworld.Greeter/Add_friend',
        request_serializer=iShare__pb2.Repeated_string.SerializeToString,
        response_deserializer=iShare__pb2.Inf.FromString,
        )
    self.Delete_friend = channel.unary_unary(
        '/helloworld.Greeter/Delete_friend',
        request_serializer=iShare__pb2.Repeated_string.SerializeToString,
        response_deserializer=iShare__pb2.Inf.FromString,
        )
    self.Create_share = channel.unary_unary(
        '/helloworld.Greeter/Create_share',
        request_serializer=iShare__pb2.Share_inf.SerializeToString,
        response_deserializer=iShare__pb2.Inf.FromString,
        )
    self.Delete_bill = channel.unary_unary(
        '/helloworld.Greeter/Delete_bill',
        request_serializer=iShare__pb2.Share_inf.SerializeToString,
        response_deserializer=iShare__pb2.Inf.FromString,
        )
    self.Obtain_bills = channel.unary_stream(
        '/helloworld.Greeter/Obtain_bills',
        request_serializer=iShare__pb2.Bill_request.SerializeToString,
        response_deserializer=iShare__pb2.Share_inf.FromString,
        )
    self.Send_Img = channel.stream_unary(
        '/helloworld.Greeter/Send_Img',
        request_serializer=iShare__pb2.Image.SerializeToString,
        response_deserializer=iShare__pb2.Inf.FromString,
        )
    self.Receive_Img = channel.unary_stream(
        '/helloworld.Greeter/Receive_Img',
        request_serializer=iShare__pb2.Repeated_string.SerializeToString,
        response_deserializer=iShare__pb2.Image.FromString,
        )
    self.Reset_Status = channel.unary_unary(
        '/helloworld.Greeter/Reset_Status',
        request_serializer=iShare__pb2.Inf.SerializeToString,
        response_deserializer=iShare__pb2.Inf.FromString,
        )
    self.Send_request = channel.unary_unary(
        '/helloworld.Greeter/Send_request',
        request_serializer=iShare__pb2.Request.SerializeToString,
        response_deserializer=iShare__pb2.Inf.FromString,
        )
    self.Obtain_request = channel.unary_stream(
        '/helloworld.Greeter/Obtain_request',
        request_serializer=iShare__pb2.Inf.SerializeToString,
        response_deserializer=iShare__pb2.Request.FromString,
        )
    self.Obtain_requestLog = channel.unary_stream(
        '/helloworld.Greeter/Obtain_requestLog',
        request_serializer=iShare__pb2.Inf.SerializeToString,
        response_deserializer=iShare__pb2.Request.FromString,
        )
    self.Obtain_requestLogHistory = channel.unary_stream(
        '/helloworld.Greeter/Obtain_requestLogHistory',
        request_serializer=iShare__pb2.Inf.SerializeToString,
        response_deserializer=iShare__pb2.Request.FromString,
        )
    self.Request_response = channel.unary_unary(
        '/helloworld.Greeter/Request_response',
        request_serializer=iShare__pb2.Response.SerializeToString,
        response_deserializer=iShare__pb2.Inf.FromString,
        )
    self.MakePayment = channel.stream_unary(
        '/helloworld.Greeter/MakePayment',
        request_serializer=iShare__pb2.BillPayment.SerializeToString,
        response_deserializer=iShare__pb2.Inf.FromString,
        )
    self.IgnoreRequestLog = channel.unary_unary(
        '/helloworld.Greeter/IgnoreRequestLog',
        request_serializer=iShare__pb2.IgnoreMessage.SerializeToString,
        response_deserializer=iShare__pb2.Inf.FromString,
        )
    self.Create_requestLog = channel.unary_unary(
        '/helloworld.Greeter/Create_requestLog',
        request_serializer=iShare__pb2.Request.SerializeToString,
        response_deserializer=iShare__pb2.Inf.FromString,
        )
    self.Send_DeviceToken = channel.unary_unary(
        '/helloworld.Greeter/Send_DeviceToken',
        request_serializer=iShare__pb2.Repeated_string.SerializeToString,
        response_deserializer=iShare__pb2.Inf.FromString,
        )
    self.Obtain_setting = channel.unary_unary(
        '/helloworld.Greeter/Obtain_setting',
        request_serializer=iShare__pb2.Inf.SerializeToString,
        response_deserializer=iShare__pb2.Setting.FromString,
        )
    self.Reset_setting = channel.unary_unary(
        '/helloworld.Greeter/Reset_setting',
        request_serializer=iShare__pb2.Setting.SerializeToString,
        response_deserializer=iShare__pb2.Inf.FromString,
        )
    self.Reset_userInfo = channel.unary_unary(
        '/helloworld.Greeter/Reset_userInfo',
        request_serializer=iShare__pb2.UserInfo.SerializeToString,
        response_deserializer=iShare__pb2.Inf.FromString,
        )
    self.Obtain_userInfo = channel.unary_unary(
        '/helloworld.Greeter/Obtain_userInfo',
        request_serializer=iShare__pb2.Inf.SerializeToString,
        response_deserializer=iShare__pb2.UserInfo.FromString,
        )
    self.Update_user_lastModified = channel.unary_unary(
        '/helloworld.Greeter/Update_user_lastModified',
        request_serializer=iShare__pb2.Inf.SerializeToString,
        response_deserializer=iShare__pb2.Inf.FromString,
        )


class GreeterServicer(object):
  """The greeting service definition.
  """

  def SayHello(self, request, context):
    """Sends a greeting
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Login(self, request, context):
    """


    rpc TimeTest (Inf) returns (stream Inf) {}

    updated
    A simple RPC
    login_m(usename, password)
    Reply_inf(status, information) : status(CANCALLED, OK) : information(reason why CANCALLED or user_id);
    replye->information can be used as notice
    login rpc
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Sign_up(self, request, context):
    """updated
    A simple RPC
    sign_m(username, password, email)
    Reply_inf(status, information) : status(CANCALLED, OK) : information(reason why CANCALLED or user_id);
    sign in rpc
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def User_inf(self, request, context):
    """updated
    A simple RPC

    input    user_id
    output   username, user_id, email, friends_name, friends_id
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Search_username(self, request, context):
    """do not need update

    A simple RPC

    search user by username
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Add_friend(self, request, context):
    """updated
    A simple RPC
    input username

    add new friend
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Delete_friend(self, request, context):
    """updated
    A simple RPC
    input user_id

    delete a friend
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Create_share(self, request, context):
    """updated
    A simple RPC

    create a new share record
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Delete_bill(self, request, context):
    """updated
    delete a bill

    use bill_id to identify bill record
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Obtain_bills(self, request, context):
    """updated


    input username amount(??? / all)
    output Bills()
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Send_Img(self, request_iterator, context):
    """do not need to update


    input Three byte package imageNmae, imagePath, imageData
    output "Get image"
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Receive_Img(self, request, context):
    """do not need update


    input folderName - imageName - imageName -.........
    outut Image bytes package filled data and name
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Reset_Status(self, request, context):
    """updated
    set user synchronism_delete = 0


    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Send_request(self, request, context):
    """updated
    # request system rpc
    send request. add friend or payment
    enum-type : friendInvite, payment
    from, to use username rather than userID
    content formate SENDER:%@ RECEVER:%@ FIRSTID:%@ LASTID:%@ COUNT:%ld
    sender or receiver is uername
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Obtain_request(self, request, context):
    """updated
    Inf contain user_id


    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Obtain_requestLog(self, request, context):
    """updated
    return requestLog has not been read


    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Obtain_requestLogHistory(self, request, context):
    """updated
    return all requestLog


    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Request_response(self, request, context):
    """updated



    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def MakePayment(self, request_iterator, context):
    """do not nedd update



    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def IgnoreRequestLog(self, request, context):
    """updated



    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Create_requestLog(self, request, context):
    """


    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Send_DeviceToken(self, request, context):
    """updated



    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Obtain_setting(self, request, context):
    """send username


    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Reset_setting(self, request, context):
    """


    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Reset_userInfo(self, request, context):
    """


    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Obtain_userInfo(self, request, context):
    """


    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Update_user_lastModified(self, request, context):
    """


    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GreeterServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SayHello': grpc.unary_unary_rpc_method_handler(
          servicer.SayHello,
          request_deserializer=iShare__pb2.HelloRequest.FromString,
          response_serializer=iShare__pb2.HelloReply.SerializeToString,
      ),
      'Login': grpc.unary_unary_rpc_method_handler(
          servicer.Login,
          request_deserializer=iShare__pb2.Login_m.FromString,
          response_serializer=iShare__pb2.Reply_inf.SerializeToString,
      ),
      'Sign_up': grpc.unary_unary_rpc_method_handler(
          servicer.Sign_up,
          request_deserializer=iShare__pb2.Sign_m.FromString,
          response_serializer=iShare__pb2.Reply_inf.SerializeToString,
      ),
      'User_inf': grpc.unary_unary_rpc_method_handler(
          servicer.User_inf,
          request_deserializer=iShare__pb2.Inf.FromString,
          response_serializer=iShare__pb2.User_detail.SerializeToString,
      ),
      'Search_username': grpc.unary_unary_rpc_method_handler(
          servicer.Search_username,
          request_deserializer=iShare__pb2.Inf.FromString,
          response_serializer=iShare__pb2.Search_result.SerializeToString,
      ),
      'Add_friend': grpc.unary_unary_rpc_method_handler(
          servicer.Add_friend,
          request_deserializer=iShare__pb2.Repeated_string.FromString,
          response_serializer=iShare__pb2.Inf.SerializeToString,
      ),
      'Delete_friend': grpc.unary_unary_rpc_method_handler(
          servicer.Delete_friend,
          request_deserializer=iShare__pb2.Repeated_string.FromString,
          response_serializer=iShare__pb2.Inf.SerializeToString,
      ),
      'Create_share': grpc.unary_unary_rpc_method_handler(
          servicer.Create_share,
          request_deserializer=iShare__pb2.Share_inf.FromString,
          response_serializer=iShare__pb2.Inf.SerializeToString,
      ),
      'Delete_bill': grpc.unary_unary_rpc_method_handler(
          servicer.Delete_bill,
          request_deserializer=iShare__pb2.Share_inf.FromString,
          response_serializer=iShare__pb2.Inf.SerializeToString,
      ),
      'Obtain_bills': grpc.unary_stream_rpc_method_handler(
          servicer.Obtain_bills,
          request_deserializer=iShare__pb2.Bill_request.FromString,
          response_serializer=iShare__pb2.Share_inf.SerializeToString,
      ),
      'Send_Img': grpc.stream_unary_rpc_method_handler(
          servicer.Send_Img,
          request_deserializer=iShare__pb2.Image.FromString,
          response_serializer=iShare__pb2.Inf.SerializeToString,
      ),
      'Receive_Img': grpc.unary_stream_rpc_method_handler(
          servicer.Receive_Img,
          request_deserializer=iShare__pb2.Repeated_string.FromString,
          response_serializer=iShare__pb2.Image.SerializeToString,
      ),
      'Reset_Status': grpc.unary_unary_rpc_method_handler(
          servicer.Reset_Status,
          request_deserializer=iShare__pb2.Inf.FromString,
          response_serializer=iShare__pb2.Inf.SerializeToString,
      ),
      'Send_request': grpc.unary_unary_rpc_method_handler(
          servicer.Send_request,
          request_deserializer=iShare__pb2.Request.FromString,
          response_serializer=iShare__pb2.Inf.SerializeToString,
      ),
      'Obtain_request': grpc.unary_stream_rpc_method_handler(
          servicer.Obtain_request,
          request_deserializer=iShare__pb2.Inf.FromString,
          response_serializer=iShare__pb2.Request.SerializeToString,
      ),
      'Obtain_requestLog': grpc.unary_stream_rpc_method_handler(
          servicer.Obtain_requestLog,
          request_deserializer=iShare__pb2.Inf.FromString,
          response_serializer=iShare__pb2.Request.SerializeToString,
      ),
      'Obtain_requestLogHistory': grpc.unary_stream_rpc_method_handler(
          servicer.Obtain_requestLogHistory,
          request_deserializer=iShare__pb2.Inf.FromString,
          response_serializer=iShare__pb2.Request.SerializeToString,
      ),
      'Request_response': grpc.unary_unary_rpc_method_handler(
          servicer.Request_response,
          request_deserializer=iShare__pb2.Response.FromString,
          response_serializer=iShare__pb2.Inf.SerializeToString,
      ),
      'MakePayment': grpc.stream_unary_rpc_method_handler(
          servicer.MakePayment,
          request_deserializer=iShare__pb2.BillPayment.FromString,
          response_serializer=iShare__pb2.Inf.SerializeToString,
      ),
      'IgnoreRequestLog': grpc.unary_unary_rpc_method_handler(
          servicer.IgnoreRequestLog,
          request_deserializer=iShare__pb2.IgnoreMessage.FromString,
          response_serializer=iShare__pb2.Inf.SerializeToString,
      ),
      'Create_requestLog': grpc.unary_unary_rpc_method_handler(
          servicer.Create_requestLog,
          request_deserializer=iShare__pb2.Request.FromString,
          response_serializer=iShare__pb2.Inf.SerializeToString,
      ),
      'Send_DeviceToken': grpc.unary_unary_rpc_method_handler(
          servicer.Send_DeviceToken,
          request_deserializer=iShare__pb2.Repeated_string.FromString,
          response_serializer=iShare__pb2.Inf.SerializeToString,
      ),
      'Obtain_setting': grpc.unary_unary_rpc_method_handler(
          servicer.Obtain_setting,
          request_deserializer=iShare__pb2.Inf.FromString,
          response_serializer=iShare__pb2.Setting.SerializeToString,
      ),
      'Reset_setting': grpc.unary_unary_rpc_method_handler(
          servicer.Reset_setting,
          request_deserializer=iShare__pb2.Setting.FromString,
          response_serializer=iShare__pb2.Inf.SerializeToString,
      ),
      'Reset_userInfo': grpc.unary_unary_rpc_method_handler(
          servicer.Reset_userInfo,
          request_deserializer=iShare__pb2.UserInfo.FromString,
          response_serializer=iShare__pb2.Inf.SerializeToString,
      ),
      'Obtain_userInfo': grpc.unary_unary_rpc_method_handler(
          servicer.Obtain_userInfo,
          request_deserializer=iShare__pb2.Inf.FromString,
          response_serializer=iShare__pb2.UserInfo.SerializeToString,
      ),
      'Update_user_lastModified': grpc.unary_unary_rpc_method_handler(
          servicer.Update_user_lastModified,
          request_deserializer=iShare__pb2.Inf.FromString,
          response_serializer=iShare__pb2.Inf.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'helloworld.Greeter', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
